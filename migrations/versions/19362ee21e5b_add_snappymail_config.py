"""add snappymail config

Revision ID: 19362ee21e5b
Revises: c6e8167fd6ef
Create Date: 2025-09-25 20:43:31.599358

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '19362ee21e5b'
down_revision = 'c6e8167fd6ef'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('snappymail_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('imap_host', sa.String(), nullable=False),
    sa.Column('imap_port', sa.Integer(), nullable=False),
    sa.Column('smtp_host', sa.String(), nullable=False),
    sa.Column('smtp_port', sa.Integer(), nullable=False),
    sa.Column('use_ssl', sa.Boolean(), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_snappymail_config_user_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', name='uq_snappymail_config_user')
    )
    # Let Alembic auto-generate indexes for email and id/user_id; remove manual duplicates to avoid conflicts
    # op.create_index('idx_snappymail_config_email', 'snappymail_configs', ['email'], unique=False)  # Removed
    op.create_index(op.f('ix_snappymail_configs_email'), 'snappymail_configs', ['email'], unique=False)
    op.create_index(op.f('ix_snappymail_configs_id'), 'snappymail_configs', ['id'], unique=False)
    op.create_index(op.f('ix_snappymail_configs_user_id'), 'snappymail_configs', ['user_id'], unique=False)
    
    # Safe index creation with IF NOT EXISTS for PostgreSQL
    op.execute('CREATE INDEX IF NOT EXISTS "idx_pr_org_date" ON payment_records (organization_id, payment_date)')
    op.drop_index('idx_purchase_returns_org_date', table_name='purchase_returns', if_exists=True)
    op.execute('CREATE INDEX IF NOT EXISTS "idx_pr_org_date" ON purchase_returns (organization_id, date)')
    op.alter_column('voucher_approvals', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # Safe index creations for workflow tables
    op.execute('CREATE INDEX IF NOT EXISTS "idx_workflow_instance_org_status" ON workflow_instances (organization_id, status)')
    op.execute('CREATE INDEX IF NOT EXISTS "idx_workflow_template_org_category" ON workflow_templates (organization_id, category)')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_workflow_template_org_category', table_name='workflow_templates', if_exists=True)
    op.drop_index('idx_workflow_instance_org_status', table_name='workflow_instances', if_exists=True)
    op.alter_column('voucher_approvals', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_index('idx_pr_org_date', table_name='purchase_returns', if_exists=True)
    op.create_index('idx_purchase_returns_org_date', 'purchase_returns', ['organization_id', 'date'], unique=False)
    op.drop_index('idx_pr_org_date', table_name='payment_records', if_exists=True)
    op.drop_index(op.f('ix_snappymail_configs_user_id'), table_name='snappymail_configs', if_exists=True)
    op.drop_index(op.f('ix_snappymail_configs_id'), table_name='snappymail_configs', if_exists=True)
    op.drop_index(op.f('ix_snappymail_configs_email'), table_name='snappymail_configs', if_exists=True)
    # idx_snappymail_config_email was manual and removed; no need to drop
    op.drop_table('snappymail_configs')
    # ### end Alembic commands ###